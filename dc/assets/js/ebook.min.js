(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
        'use strict';

        var _scrollListener = require('./scroll-listener');

        var _screenSizeListener = require('./screen-size-listener');

        var _components = require('./components');

        var _components2 = _interopRequireDefault(_components);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

        var Application = function Application() {
            var _this = this;

            _classCallCheck(this, Application);

            this.setupEventListeners = function () {
                _this.scrollListener.bindWindowListeners();
                _this.screenSizeListener.bindWindowListeners();
            };

            this.initializeComponents = function () {
                _components2.default.forEach(function (component) {
                    return component(_this);
                });
            };

            this.start = function () {
                _this.setupEventListeners();
                _this.initializeComponents();
            };

            this.scrollListener = new _scrollListener.ScrollListener();
            this.screenSizeListener = new _screenSizeListener.ScreenSizeListener();

            this.bodyDOMElement = document.body;
        };

        var application = new Application();
        $(document).ready(application.start);

    },{"./components":6,"./screen-size-listener":9,"./scroll-listener":15}],2:[function(require,module,exports){
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _scrollListener = require('../scroll-listener');

        var _screenSizeListener = require('../screen-size-listener');

        var _utils = require('../utils');

        var arrowComponent = function arrowComponent(application) {
            var screenSizeListener = function screenSizeListener(_ref) {
                var breakpoint = _ref.breakpoint;

                var registeredEvent = null;

                if (breakpoint >= _screenSizeListener.SCREEN_SIZES.LARGE) {
                    registeredEvent = (0, _scrollListener.createDOMActionEvent)(100, null, 'add-class', {
                        selector: '.section-learn-to-love-outsourcing',
                        className: 'section-learn-to-love-outsourcing--disable-arrow'
                    });

                    application.scrollListener.registerEvents(registeredEvent);
                } else {
                    if (registeredEvent) {
                        application.scrollListener.unregisterEvents(registeredEvent);
                    }
                }
            };

            application.screenSizeListener.addListener(screenSizeListener);
        };

        exports.default = arrowComponent;

    },{"../screen-size-listener":9,"../scroll-listener":15,"../utils":19}],3:[function(require,module,exports){
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _scrollListener = require('../scroll-listener');

        var _screenSizeListener = require('../screen-size-listener');

        var _utils = require('../utils');

        var featuresComponent = function featuresComponent(application) {
            var screenSizeListener = function screenSizeListener(_ref) {
                var breakpoint = _ref.breakpoint;

                var registeredEvent = null;

                if (breakpoint >= _screenSizeListener.SCREEN_SIZES.LARGE) {
                    var elementSelector = '.section-what-will-you-find-inside';
                    var element = document.querySelector(elementSelector);
                    var offsetTop = element.getBoundingClientRect().top;
                    var viewportSize = (0, _utils.getViewportSize)();

                    var scrollTop = offsetTop - viewportSize.height + 300;
                    if (scrollTop < 0) {
                        scrollTop = 0;
                    }

                    registeredEvent = (0, _scrollListener.createDOMActionEvent)(scrollTop, null, 'add-class', {
                        selector: elementSelector,
                        className: 'section-what-will-you-find-inside--inside-viewport'
                    });

                    application.scrollListener.registerEvents(registeredEvent);
                } else {
                    if (registeredEvent) {
                        application.scrollListener.unregisterEvents(registeredEvent);
                    }
                }
            };

            application.screenSizeListener.addListener(screenSizeListener);
        };

        exports.default = featuresComponent;

    },{"../screen-size-listener":9,"../scroll-listener":15,"../utils":19}],4:[function(require,module,exports){
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var messageVisibleTime = 10000;
        var messageVisibleTimer = null;

        function isValidEmail(email) {
            // practical implementation of RFC 2822
            // https://stackoverflow.com/questions/46155/how-to-validate-email-address-in-javascript
            return (/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(email)
            );
        }

        function clear(boxElement) {
            boxElement.removeClass('section-learn-to-love-outsourcing__input-message-box--visible');

            // Cleanup previously added status classes
            boxElement.removeClass('section-learn-to-love-outsourcing__input-message-box--success');
            boxElement.removeClass('section-learn-to-love-outsourcing__input-message-box--error');
        }

        var toggleFormMessage = function toggleFormMessage(boxElement, visible) {
            if (visible) {
                boxElement.addClass('section-learn-to-love-outsourcing__input-message-box--visible');
                boxElement.one('click', function () {
                    return clear(boxElement);
                });
            } else {
                clear(boxElement);
            }
        };

        var handleFormSubmitSuccess = function handleFormSubmitSuccess(boxElement, messageElement) {
            messageElement.html(messageElement.attr('data-success-text'));

            boxElement.addClass('section-learn-to-love-outsourcing__input-message-box--success');
        };

        var handleFormSubmitFailure = function handleFormSubmitFailure(boxElement, messageElement) {
            messageElement.html(messageElement.attr('data-failure-text'));

            boxElement.addClass('section-learn-to-love-outsourcing__input-message-box--error');
        };

        var toggleMissingAcceptMessage = function toggleMissingAcceptMessage(boxElement, messageElement) {
            messageElement.html(messageElement.attr('data-missing-accept-text'));

            boxElement.addClass('section-learn-to-love-outsourcing__input-message-box--error');
        };

        var toggleIncorrectEmailMessage = function toggleIncorrectEmailMessage(boxElement, messageElement) {
            messageElement.html(messageElement.attr('data-incorrect-email-text'));

            boxElement.addClass('section-learn-to-love-outsourcing__input-message-box--error');
        };

        var handleSubmit = function handleSubmit(event, boxElement, messageElement) {
            event.preventDefault();

            var formElement = jQuery(event.target);
            var formEndpointUrl = formElement.attr('action');

            var serializedArray = formElement.serializeArray();
            var serializedObject = serializedArray.reduce(function (obj, currentItem) {
                obj[currentItem.name] = currentItem.value;

                return obj;
            }, {});

            if (messageVisibleTimer) {
                return;
            }

            toggleFormMessage(boxElement, true);

            if (!isValidEmail(formElement.find('input[name="email"]').val())) {
                toggleIncorrectEmailMessage(boxElement, messageElement);
                return;
            }

            formElement[0].reset();

            messageVisibleTimer = setTimeout(function () {
                toggleFormMessage(boxElement, false);

                messageVisibleTimer = null;
            }, messageVisibleTime);

            jQuery.ajax({
                type: 'POST',
                dataType: 'json',
                url: formEndpointUrl,
                data: serializedObject,
                success: function success() {
                    return handleFormSubmitSuccess(boxElement, messageElement);
                },
                error: function error() {
                    return handleFormSubmitFailure(boxElement, messageElement);
                }
            });
        };

        function onInputFocus(e) {
            e.delegateTarget.classList.add('section-learn-to-love-outsourcing__form--focus');
        }

        function onInputBlur(e) {
            e.delegateTarget.classList.remove('section-learn-to-love-outsourcing__form--focus');
        }

        var formComponent = function formComponent() {
            var form = jQuery('#get-ebook-form');

            if (form.length === 0) {
                return;
            }

            var boxElement = jQuery('.section-learn-to-love-outsourcing__input-message-box');
            var messageElement = boxElement.find('.section-learn-to-love-outsourcing__input-message');

            form.submit(function (event) {
                return handleSubmit(event, boxElement, messageElement);
            });
            form.on('focus', '.section-learn-to-love-outsourcing__input', onInputFocus);
            form.on('blur', '.section-learn-to-love-outsourcing__input', onInputBlur);
        };

        exports.default = formComponent;

    },{}],5:[function(require,module,exports){
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _scrollListener = require('../scroll-listener');

        var _screenSizeListener = require('../screen-size-listener');

        function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

        function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

        function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

        var scrollToElement = function scrollToElement(element) {
            // 85px is the height of the header,
            // 20px is an additional gap between the header and section's content.
            var offsetTop = element.offset().top - 85 - 20;
            if (offsetTop < 0) {
                offsetTop = 0;
            }

            // Browsers support scrollTop on different elements.
            // Using both `html` and `body` gives the best results.
            jQuery('html, body').animate({
                scrollTop: offsetTop
            }, 650);
        };

        var handleMenuItemClick = function handleMenuItemClick(event) {
            var target = event.target;
            var hash = target.hash.startsWith('#') ? target.hash.slice(1) : target.hash;

            var targetElement = jQuery('[id="' + hash + '"]');

            if (targetElement.length) {
                // Disable default behavior of a link
                event.preventDefault();

                scrollToElement(targetElement);
            }
        };

        var handleGetItButtonClick = function handleGetItButtonClick() {
            var inputSelector = jQuery('.section-learn-to-love-outsourcing__input-wrapper');

            scrollToElement(inputSelector);
        };

        var handleLogoClick = function handleLogoClick() {
            jQuery('html, body').animate({
                scrollTop: 0
            }, 650);
        };

        var HeaderScrollSpy = function (_BaseScrollEvent) {
            _inherits(HeaderScrollSpy, _BaseScrollEvent);

            function HeaderScrollSpy() {
                _classCallCheck(this, HeaderScrollSpy);

                var _this = _possibleConstructorReturn(this, (HeaderScrollSpy.__proto__ || Object.getPrototypeOf(HeaderScrollSpy)).call(this, false));

                _this.getRegions = function () {
                    var regions = {};

                    _this.children.each(function (index, menuItem) {
                        var regionName = $(menuItem).attr(HeaderScrollSpy.DATA_ATTRIBUTE_NAME);
                        var regionElement = $(regionName);

                        if (regionElement.length) {
                            regions[regionElement.offset().top] = regionName;
                        }
                    });

                    return regions;
                };

                _this.findRegion = function (scrollTop) {
                    var element = Object.keys(_this.regions).reverse().find(function (region) {
                        return region <= scrollTop;
                    });

                    return element ? _this.regions[element] : undefined;
                };

                _this.notify = function (previousValue, newValue) {
                    var region = _this.findRegion(newValue + 85 + 20);

                    if (region !== _this.currentRegion) {
                        _this.currentRegion = region;

                        _this.children.each(function (index, element) {
                            var regionName = $(element).attr(HeaderScrollSpy.DATA_ATTRIBUTE_NAME);

                            if (regionName === region) {
                                $(element).addClass(HeaderScrollSpy.ACTIVE_CLASS_NAME);
                            } else {
                                $(element).removeClass(HeaderScrollSpy.ACTIVE_CLASS_NAME);
                            }
                        });
                    }
                };

                _this.parentElement = jQuery('.header__menu');
                _this.children = _this.parentElement.children('.header__menu-item');

                _this.regions = _this.getRegions();
                _this.currentRegion = null;
                return _this;
            }

            return HeaderScrollSpy;
        }(_scrollListener.BaseScrollEvent);

        HeaderScrollSpy.ACTIVE_CLASS_NAME = 'header__menu-item--active';
        HeaderScrollSpy.DATA_ATTRIBUTE_NAME = 'data-region';


        var headerComponent = function headerComponent(application) {
            var stickyHeaderScrollEvent = (0, _scrollListener.createDOMActionEvent)(120, undefined, 'toggle-class', {
                selector: 'header.header',
                className: 'header--sticky'
            });

            var scrollSpyEvent = new HeaderScrollSpy();

            var screenSizeListener = function screenSizeListener(_ref) {
                var breakpoint = _ref.breakpoint;

                var registeredEvent = null;
                var elementSelector = '.section-learn-to-love-outsourcing__input-wrapper';
                var classToAdd = 'header--with-get-it-button';
                var element = document.querySelector(elementSelector);

                if (breakpoint >= _screenSizeListener.SCREEN_SIZES.LARGE) {
                    var offsetTop = element.getBoundingClientRect().top + $(window).scrollTop() + element.clientHeight - 85; // 85 is the height of the header

                    registeredEvent = (0, _scrollListener.createDOMActionEvent)(offsetTop, null, 'toggle-class', {
                        selector: 'header.header',
                        className: classToAdd
                    });

                    application.scrollListener.registerEvents(registeredEvent);
                } else {
                    element.classList.remove(classToAdd);

                    if (registeredEvent) {
                        application.scrollListener.unregisterEvents(registeredEvent);
                    }
                }
            };

            // Add class to the header when page is vertically scrolled over 120px from top
            application.scrollListener.registerEvents(stickyHeaderScrollEvent, scrollSpyEvent);

            // Add click handler for menu items
            jQuery('.header__menu-link').click(handleMenuItemClick);

            // Detect scrolling below "Get it" input field to show the button on the header
            application.screenSizeListener.addListener(screenSizeListener);

            // Add click handler for "Get it" button
            jQuery('.header__get-it-button').click(handleGetItButtonClick);

            // Add click handler for logo
            jQuery('.header__logo').click(handleLogoClick);
        };

        exports.default = headerComponent;

    },{"../screen-size-listener":9,"../scroll-listener":15}],6:[function(require,module,exports){
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _header = require('./header');

        var _header2 = _interopRequireDefault(_header);

        var _sliders = require('./sliders');

        var _sliders2 = _interopRequireDefault(_sliders);

        var _features = require('./features');

        var _features2 = _interopRequireDefault(_features);

        var _smartphoneAnimation = require('./smartphone-animation');

        var _smartphoneAnimation2 = _interopRequireDefault(_smartphoneAnimation);

        var _form = require('./form');

        var _form2 = _interopRequireDefault(_form);

        var _arrow = require('./arrow');

        var _arrow2 = _interopRequireDefault(_arrow);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        exports.default = [_arrow2.default, _header2.default, _sliders2.default, _features2.default, _smartphoneAnimation2.default, _form2.default];

    },{"./arrow":2,"./features":3,"./form":4,"./header":5,"./sliders":7,"./smartphone-animation":8}],7:[function(require,module,exports){
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _screenSizeListener = require('../screen-size-listener');

        var slidersActive = false;

        var sliderElementsSelectors = ['.section-what-will-you-find-inside__row', '.section-who-was-the-expert-consultant__person-list'];

        var slickOptions = {
            arrows: false,
            // cubic-bezier-out easing
            cssEase: 'cubic-bezier(0.215, 0.61, 0.355, 1)',
            dots: true,
            infinite: false,
            mobileFirst: true,
            swipe: true,
            useCSS: true,
            useTransform: true,
            zIndex: 2,
            responsive: [{
                breakpoint: _screenSizeListener.SCREEN_SIZES.MEDIUM - 1,
                settings: {
                    slidesToShow: 2,
                    slidesToScroll: 2
                }
            }],
            waitForAnimate: false,
            speed: 300,
            edgeFriction: 0.25
        };

        var enableSliders = function enableSliders() {
            sliderElementsSelectors.forEach(function (selector) {
                $(selector).slick(slickOptions);
            });
        };

        var disableSliders = function disableSliders() {
            sliderElementsSelectors.forEach(function (selector) {
                $(selector).slick('unslick');
            });
        };

        var onScreenSizeChangeEvent = function onScreenSizeChangeEvent(event) {
            var breakpoint = event.breakpoint;

            if (breakpoint < _screenSizeListener.SCREEN_SIZES.LARGE) {
                if (!slidersActive) {
                    slidersActive = true;

                    enableSliders();
                }
            } else {
                if (slidersActive) {
                    slidersActive = false;

                    disableSliders();
                }
            }
        };

        var slidersComponent = function slidersComponent(application) {
            application.screenSizeListener.addListener(onScreenSizeChangeEvent, false);
        };

        exports.default = slidersComponent;

    },{"../screen-size-listener":9}],8:[function(require,module,exports){
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _scrollListener = require('../scroll-listener');

        var _utils = require('../utils');

        function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

        function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

        function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

        var SmartphoneAnimationScrollEvent = function (_BaseScrollEvent) {
            _inherits(SmartphoneAnimationScrollEvent, _BaseScrollEvent);

            function SmartphoneAnimationScrollEvent() {
                _classCallCheck(this, SmartphoneAnimationScrollEvent);

                var _this = _possibleConstructorReturn(this, (SmartphoneAnimationScrollEvent.__proto__ || Object.getPrototypeOf(SmartphoneAnimationScrollEvent)).call(this, false));

                _this.getSelector = function (part) {
                    return '.section-what-can-you-learn-about__graphic--' + part;
                };

                _this.getTranslate3DValue = function (value) {
                    return 'translate3d(0, ' + value + ', 0)';
                };

                _this.ease = function (t) {
                    return t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t;
                };

                _this.notify = function (previousValue, newValue) {
                    var viewportSize = (0, _utils.getViewportSize)();
                    var parentElementHeight = _this.parentElement.height();

                    var offsetTop = _this.parentElement.offset().top - viewportSize.height / 2 - 85;
                    if (offsetTop < 0) {
                        offsetTop = 0;
                    }

                    var distance = Math.floor(viewportSize.height / 2) + 100;
                    var middleHeight = offsetTop + Math.floor(parentElementHeight / 2);
                    var startHeight = middleHeight - distance;
                    var endHeight = middleHeight + distance;
                    var animationOffset = Math.floor(viewportSize.height / 2) - 150;

                    Object.keys(_this.parts).forEach(function (part) {
                        var partElement = jQuery(_this.getSelector(part));

                        if (newValue >= startHeight && newValue <= endHeight) {
                            var dist = Math.floor(newValue - middleHeight);

                            var value = void 0;
                            if (Math.abs(dist) <= animationOffset) {
                                value = -_this.parts[part] * _this.ease(1 - Math.abs(dist / animationOffset));
                            } else {
                                value = 0;
                            }

                            partElement.css('transform', _this.getTranslate3DValue(value + 'px'));
                        }
                    });
                };

                _this.parentElement = jQuery('.section-what-can-you-learn-about__graphic-wrapper');
                _this.parts = {
                    device: 10,
                    screen: 40,
                    interface: 80
                };
                return _this;
            }

            return SmartphoneAnimationScrollEvent;
        }(_scrollListener.BaseScrollEvent);

        var smartphoneAnimationComponent = function smartphoneAnimationComponent(application) {
            var event = new SmartphoneAnimationScrollEvent();

            application.scrollListener.registerEvents(event);
        };

        exports.default = smartphoneAnimationComponent;

    },{"../scroll-listener":15,"../utils":19}],9:[function(require,module,exports){
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.SCREEN_SIZES = exports.ScreenSizeListener = undefined;

        var _screenSizeListener = require('./screen-size-listener');

        var _screenSizeListener2 = _interopRequireDefault(_screenSizeListener);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        exports.ScreenSizeListener = _screenSizeListener2.default;
        exports.SCREEN_SIZES = _screenSizeListener.SCREEN_SIZES;

    },{"./screen-size-listener":10}],10:[function(require,module,exports){
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

        var SCREEN_SIZES = exports.SCREEN_SIZES = {
            SMALL: 0,
            MEDIUM: 768,
            LARGE: 992,
            XLARGE: 1200
        };

        var ScreenSizeListener = function ScreenSizeListener() {
            var _this = this;

            _classCallCheck(this, ScreenSizeListener);

            this.bindWindowListeners = function () {
                window.addEventListener('resize', _this._onWindowResize);
            };

            this.unbindWindowListeners = function () {
                window.removeEventListener('resize', _this._onWindowResize);
            };

            this.addListener = function (callback) {
                var ignoreInitial = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

                _this.listeners.push(callback);

                if (!ignoreInitial) {
                    _this._callEvents(_this.getCurrentScreenSize(), [callback]);
                }
            };

            this.removeListener = function (callback) {
                _this.listeners = _this.listeners.filter(function (listener) {
                    return listener !== callback;
                });
            };

            this.getCurrentScreenSize = function () {
                var width = Math.max(_this.documentElement.clientWidth, window.innerWidth || 0);
                var height = Math.max(_this.documentElement.clientHeight, window.innerHeight || 0);

                return {
                    width: width,
                    height: height
                };
            };

            this.getBreakpoint = function (size) {
                var width = size.width;

                var keys = Object.values(SCREEN_SIZES).reverse();
                return keys.find(function (key) {
                    return width >= key;
                });
            };

            this._callEvents = function (size) {
                var listeners = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.listeners;

                var breakpoint = _this.getBreakpoint(size);

                var data = {
                    size: size,
                    breakpoint: breakpoint
                };

                listeners.forEach(function (listener) {
                    return listener(data);
                });
            };

            this._onWindowResize = function () {
                if (_this.hasWindowResized) {
                    return;
                }

                _this.hasWindowResized = true;
                setTimeout(_this._onWindowResizeTick, 500);
            };

            this._onWindowResizeTick = function () {
                if (!_this.hasWindowResized) {
                    return;
                }

                _this.hasWindowResized = false;

                var newWindowSize = _this.getCurrentScreenSize();
                _this._callEvents(newWindowSize);
            };

            this.documentElement = document.documentElement;

            this.hasWindowResized = false;
            this.listeners = [];
        };

        exports.default = ScreenSizeListener;

    },{}],11:[function(require,module,exports){
        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

        var BaseScrollEvent = function BaseScrollEvent() {
            var ignoreInitialCheck = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

            _classCallCheck(this, BaseScrollEvent);

            this.notify = function (previousValue, newValue) {};

            this.ignoreInitialCheck = ignoreInitialCheck;
        };

        exports.default = BaseScrollEvent;

    },{}],12:[function(require,module,exports){
        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

        function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

        var AddClassAction = function () {
            function AddClassAction(options) {
                _classCallCheck(this, AddClassAction);

                this.selector = options.selector;
                this.className = options.className;
                this.added = false;
            }

            _createClass(AddClassAction, [{
                key: "onEnter",
                value: function onEnter() {
                    if (this.added) {
                        return;
                    }

                    var element = document.querySelector(this.selector);

                    if (!element) {
                        return;
                    }

                    element.classList.add(this.className);
                    this.added = true;
                }
            }]);

            return AddClassAction;
        }();

        exports.default = AddClassAction;

    },{}],13:[function(require,module,exports){
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.AddClassAction = exports.ToggleClassAction = exports.actions = undefined;

        var _toggleClass = require('./toggle-class');

        var _toggleClass2 = _interopRequireDefault(_toggleClass);

        var _addClass = require('./add-class');

        var _addClass2 = _interopRequireDefault(_addClass);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        var actions = {
            'toggle-class': _toggleClass2.default,
            'add-class': _addClass2.default
        };

        exports.actions = actions;
        exports.ToggleClassAction = _toggleClass2.default;
        exports.AddClassAction = _addClass2.default;

    },{"./add-class":12,"./toggle-class":14}],14:[function(require,module,exports){
        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

        function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

        var ToggleClassAction = function () {
            function ToggleClassAction(options) {
                _classCallCheck(this, ToggleClassAction);

                this.selector = options.selector;
                this.className = options.className;
                this.reverse = options.reverse;
            }

            _createClass(ToggleClassAction, [{
                key: "onEnter",
                value: function onEnter() {
                    if (this.reverse) {
                        this._removeClass();
                    } else {
                        this._addClass();
                    }
                }
            }, {
                key: "onLeave",
                value: function onLeave() {
                    if (this.reverse) {
                        this._addClass();
                    } else {
                        this._removeClass();
                    }
                }
            }, {
                key: "_addClass",
                value: function _addClass() {
                    var element = document.querySelector(this.selector);

                    if (!element) {
                        return;
                    }

                    element.classList.add(this.className);
                }
            }, {
                key: "_removeClass",
                value: function _removeClass() {
                    var element = document.querySelector(this.selector);

                    if (!element) {
                        return;
                    }

                    element.classList.remove(this.className);
                }
            }]);

            return ToggleClassAction;
        }();

        exports.default = ToggleClassAction;

    },{}],15:[function(require,module,exports){
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.createDOMActionEvent = exports.ScrollEvent = exports.BaseScrollEvent = exports.ScrollListener = undefined;

        var _baseScrollEvent = require('./base-scroll-event');

        var _baseScrollEvent2 = _interopRequireDefault(_baseScrollEvent);

        var _scrollEvent = require('./scroll-event');

        var _scrollEvent2 = _interopRequireDefault(_scrollEvent);

        var _scrollListener = require('./scroll-listener');

        var _scrollListener2 = _interopRequireDefault(_scrollListener);

        var _scrollDom = require('./scroll-dom');

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        exports.ScrollListener = _scrollListener2.default;
        exports.BaseScrollEvent = _baseScrollEvent2.default;
        exports.ScrollEvent = _scrollEvent2.default;
        exports.createDOMActionEvent = _scrollDom.createDOMActionEvent;

    },{"./base-scroll-event":11,"./scroll-dom":16,"./scroll-event":17,"./scroll-listener":18}],16:[function(require,module,exports){
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.createDOMActionEvent = createDOMActionEvent;

        var _scrollEvent = require('./scroll-event');

        var _scrollEvent2 = _interopRequireDefault(_scrollEvent);

        var _domActions = require('./dom-actions');

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        function createDOMActionEvent(enterHeight, leaveHeight, actionName, options) {
            var ignoreInitial = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

            var actionClass = _domActions.actions[actionName];

            if (!actionClass) {
                throw new Error('Action \'' + actionName + '\' does not exist');
            }

            var actionInstance = new actionClass(options);

            var callback = function callback(action, scrollHeight) {
                switch (action) {
                    case 'enter':
                        if (actionInstance.onEnter) {
                            actionInstance.onEnter(scrollHeight);
                        }
                        break;
                    case 'leave':
                        if (actionInstance.onLeave) {
                            actionInstance.onLeave(scrollHeight);
                        }
                        break;
                }
            };

            return new _scrollEvent2.default(callback, enterHeight, leaveHeight, ignoreInitial);
        }

    },{"./dom-actions":13,"./scroll-event":17}],17:[function(require,module,exports){
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _baseScrollEvent = require('./base-scroll-event');

        var _baseScrollEvent2 = _interopRequireDefault(_baseScrollEvent);

        function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

        function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

        function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

        function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

        var ScrollEvent = function (_BaseScrollEvent) {
            _inherits(ScrollEvent, _BaseScrollEvent);

            function ScrollEvent(callback, enterHeight) {
                var leaveHeight = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
                var ignoreInitialCheck = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;

                _classCallCheck(this, ScrollEvent);

                var _this = _possibleConstructorReturn(this, (ScrollEvent.__proto__ || Object.getPrototypeOf(ScrollEvent)).call(this, ignoreInitialCheck));

                _this.isValueInRange = function (value) {
                    return value >= _this.enterHeight && (_this.leaveHeight === null || value <= _this.leaveHeight);
                };

                _this.notify = function (previousValue, nextValue) {
                    if (_this.isValueInRange(nextValue)) {
                        if (previousValue === nextValue || !_this.isValueInRange(previousValue)) {
                            _this.callback('enter', nextValue);
                        }
                    } else {
                        if (previousValue === nextValue || _this.isValueInRange(previousValue)) {
                            _this.callback('leave', nextValue);
                        }
                    }
                };

                _this.callback = callback;
                _this.enterHeight = enterHeight;
                _this.leaveHeight = leaveHeight;
                return _this;
            }

            return ScrollEvent;
        }(_baseScrollEvent2.default);

        exports.default = ScrollEvent;

    },{"./base-scroll-event":11}],18:[function(require,module,exports){
        'use strict';

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

        function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

        var ScrollListener = function () {
            function ScrollListener() {
                var _this = this;

                var throttlingEnabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

                _classCallCheck(this, ScrollListener);

                this.bindWindowListeners = function () {
                    window.addEventListener('scroll', _this._onScrollListener);

                    var eventsToCheckOnInit = _this.registeredEvents.filter(function (event) {
                        return !event.ignoreInitialCheck;
                    });
                    _this._callEvents(_this.previousScrollHeight, _this.currentScrollHeight, eventsToCheckOnInit);
                };

                this.unbindWindowListeners = function () {
                    window.removeEventListener('scroll', _this._onScrollListener);
                };

                this.getScrollHeight = function () {
                    if (typeof window.pageYOffset !== 'undefined') {
                        return window.pageYOffset;
                    }

                    if (_this.scrollTopDocumentElementAvailable) {
                        return _this.documentElement.scrollTop;
                    }

                    return _this.documentBody.scrollHeight;
                };

                this._onScrollListener = function () {
                    if (_this.throttlingEnabled) {
                        if (_this.hasWindowScrolled) {
                            return;
                        }

                        _this.hasWindowScrolled = true;
                        setTimeout(_this._onScrollTick, 25);
                    } else {
                        requestAnimationFrame(_this._onScrollTick);
                    }
                };

                this._onScrollTick = function () {
                    if (_this.throttlingEnabled) {
                        if (!_this.hasWindowScrolled) {
                            return;
                        }

                        _this.hasWindowScrolled = false;
                    }

                    _this.previousScrollHeight = _this.currentScrollHeight;
                    _this.currentScrollHeight = _this.getScrollHeight();

                    _this._callEvents(_this.previousScrollHeight, _this.currentScrollHeight);
                };

                this.throttlingEnabled = throttlingEnabled;
                this.documentElement = document.documentElement;
                this.documentBody = document.body;

                this.scrollTopDocumentElementAvailable = this._getScrollTopDocumentElementAvailable();
                this.hasWindowScrolled = false;

                var scrollHeight = this.getScrollHeight();
                this.previousScrollHeight = scrollHeight;
                this.currentScrollHeight = scrollHeight;

                this.registeredEvents = [];
            }

            _createClass(ScrollListener, [{
                key: 'registerEvents',
                value: function registerEvents() {
                    var _registeredEvents;

                    for (var _len = arguments.length, events = Array(_len), _key = 0; _key < _len; _key++) {
                        events[_key] = arguments[_key];
                    }

                    (_registeredEvents = this.registeredEvents).push.apply(_registeredEvents, events);

                    var eventsToCheckOnInit = events.filter(function (event) {
                        return !event.ignoreInitialCheck;
                    });
                    this._callEvents(this.previousScrollHeight, this.currentScrollHeight, eventsToCheckOnInit);
                }
            }, {
                key: 'unregisterEvents',
                value: function unregisterEvents() {
                    for (var _len2 = arguments.length, events = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                        events[_key2] = arguments[_key2];
                    }

                    this.registeredEvents = this.registeredEvents.filter(function (event) {
                        return !events.includes(event);
                    });
                }
            }, {
                key: '_getScrollTopDocumentElementAvailable',
                value: function _getScrollTopDocumentElementAvailable() {
                    return typeof this.documentElement.scrollTop !== 'undefined';
                }
            }, {
                key: '_callEvents',
                value: function _callEvents(previousScrollHeight, currentScrollHeight) {
                    var eventsList = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.registeredEvents;

                    eventsList.map(function (event) {
                        return event.notify(previousScrollHeight, currentScrollHeight);
                    });
                }
            }]);

            return ScrollListener;
        }();

        exports.default = ScrollListener;

    },{}],19:[function(require,module,exports){
        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var getViewportSize = exports.getViewportSize = function getViewportSize() {
            var documentElement = document.documentElement;
            var body = document.body;

            return {
                width: documentElement.clientWidth || body.clientWidth,
                height: documentElement.clientHeight || body.clientHeight
            };
        };

    },{}]},{},[1])
